{"version":3,"sources":["./src/app/models/question.model.ts","./src/app/ui/form.validators.ts","./src/app/services/service.model.ts","./src/app/ui/truncate.pipe.ts","./src/app/services/auth.interceptor.ts","./src/environments/environment.ts","./src/app/models/store-entity.model.ts","./src/app/ui/question/question.component.html","./src/app/ui/question/question.component.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/home/question-details/question-details.component.ts","./src/app/components/home/question-details/question-details.component.html","./src/app/components/home/question-details/comments/comments.component.ts","./src/app/components/home/question-details/comments/comments.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login-routing-module.ts","./src/app/app.module.ts","./src/app/ui/gui.service.ts","./src/app/components/home/question-add/question-add.component.ts","./src/app/components/home/question-add/question-add.component.html","./src/app/services/questions.service.ts","./src/app/ui/error.service.ts","./src/app/services/auth.service.ts","./src/app/components/login/login.module.ts","./src/app/ui/vote/vote.component.ts","./src/app/ui/vote/vote.component.html","./src/app/ui/header/header.component.ts","./src/app/ui/header/header.component.html","./src/app/app-routing.module.ts","./src/app/ui/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class Question{\r\n    id: number\r\n    title: string\r\n    body: string\r\n    userId: number\r\n    createdAt: Date\r\n    numberOfNewComments: number\r\n    votes: number\r\n    votesBy: number[]\r\n}","import { AbstractControl } from \"@angular/forms\"\n\nexport function EmailValidator(control: AbstractControl) {\n    const emailRegex: RegExp =\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    let invalid = !emailRegex.test(control.value)\n    if (control.value === null || control.value === '') {\n        invalid = false\n    }\n    return invalid ? { invalidEmail: { value: control.value } } : null\n}","export enum EndpointURIs{\r\n    LOGIN = \"https://mopv5.herokuapp.com/login\",\r\n    REGISTER = \"https://mopv5.herokuapp.com/register\",\r\n    USER = \"https://mopv5.herokuapp.com/users\",\r\n    QUESTIONS = \"https://mopv5.herokuapp.com/questions\",\r\n    VOTE = \"https://mopv5.herokuapp.com/votes\",\r\n    COMMENT = \"https://mopv5.herokuapp.com/comments\",\r\n}","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n    name: 'truncate',\n})\nexport class TruncatePipe implements PipeTransform {\n    transform(\n        value: string,\n        limit = 25,\n        completeWords = false,\n        ellipsis = '...'\n    ) {\n        if (completeWords) {\n            limit = value.substr(0, limit).lastIndexOf(' ')\n        }\n        return value?.length > limit ? value.substr(0, limit) + ellipsis : value\n    }\n}\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { LoginComponent } from '../components/login/login.component';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService, private router: Router, public dialog: MatDialog) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    req = req.clone({\r\n      headers: req.headers.set(\r\n        'authorization',\r\n        'Bearer ' + this.authService.token\r\n      ),\r\n    });\r\n    return next.handle(req).pipe(catchError((err)=>{\r\n      if(err.status === 401){\r\n        this.openBottomSheet()\r\n      }\r\n      return throwError(err);\r\n    }));\r\n  }\r\n\r\n  openBottomSheet(): void {\r\n    this.dialog.open(LoginComponent)\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { BehaviorSubject, Observable, combineLatest } from 'rxjs'\r\nimport { filter, map, share, shareReplay } from 'rxjs/operators'\r\n\r\nexport class StoreEntity<T> {\r\n    constructor(\r\n        private _entityInitValue: any,\r\n        private _loadingInitValue: boolean,\r\n        private _sharedObservable?: boolean,\r\n        private _replayCount = 0\r\n    ) {}\r\n\r\n    private readonly _data = new BehaviorSubject<T>(this._entityInitValue)\r\n    private readonly _dataDefault = this._data\r\n        .asObservable()\r\n        .pipe(filter((val) => val != null))\r\n    readonly data$ = this._sharedObservable\r\n        ? this._replayCount > 0\r\n            ? this._dataDefault.pipe(shareReplay(this._replayCount))\r\n            : this._dataDefault.pipe(share())\r\n        : this._dataDefault\r\n\r\n    private readonly _initialCall = new BehaviorSubject<boolean>(false)\r\n    private readonly initialCall$ = this._initialCall.asObservable()\r\n\r\n    private readonly _loading = new BehaviorSubject<boolean>(\r\n        this._loadingInitValue\r\n    )\r\n    readonly loading$ = this._loading.asObservable().pipe(shareReplay(1))\r\n\r\n    get showNoData$(): Observable<boolean> {\r\n        return combineLatest([this.initialCall$, this.data$]).pipe(\r\n            map(([initialCall, data]) => {\r\n                return initialCall\r\n                    ? Array.isArray(data)\r\n                        ? data.length === 0\r\n                        : Object.keys(data).length === 0\r\n                    : false\r\n            }),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    get data(): T {\r\n        return this._data.getValue()\r\n    }\r\n\r\n    set data(value: T) {\r\n        if (!this._initialCall.value) {\r\n            this._initialCall.next(true)\r\n        }\r\n        this._data.next(value)\r\n    }\r\n\r\n    get loading(): boolean {\r\n        return this._loading.getValue()\r\n    }\r\n\r\n    set loading(value: boolean) {\r\n        this._loading.next(value)\r\n    }\r\n}\r\n","<ng-container *ngIf=\"question\">\n  <div class=\"question\">\n    <div (click)=\"handleQuestionClick()\" style=\"display: flex; flex-direction: column\">\n      <div style=\"display: flex; justify-content: space-between;\">\n        <h3>{{ question.title }}</h3>\n          <div class=\"votes-badge\" *ngIf=\"!showVoteBar\">\n            <mat-icon class=\"material-icons-outline\">thumbs_up_down</mat-icon>\n            {{ question.votes }}\n          </div>\n      </div>\n      <p>{{ question.body | truncate: summary ?  350 : question.body?.length}}</p>\n    </div>\n    <app-vote\n      *ngIf=\"showVoteBar\"\n      [question]=\"question\"\n      (updatedQuestion)=\"handleQuestionVotes($event)\"\n    ></app-vote>\n  </div>\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionService } from 'src/app/services/questions.service';\nimport { tap, take } from 'rxjs/operators';\nimport { Question } from 'src/app/models/question.model';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Comment } from 'src/app/models/comment.model';\nimport { AuthService } from 'src/app/services/auth.service';\n\nenum VoteAction {\n  UPVOTE = 'UPWOTE',\n  DOWNVOTE = 'DOWNVOTE',\n}\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss'],\n})\nexport class QuestionComponent implements OnInit {\n  @Input() question: Question;\n  @Input() showVoteBar = true\n  @Input() summary: boolean\n  eVoteAction = VoteAction;\n\n  isLoggedIn: boolean;\n\n  constructor(\n    private questionService: QuestionService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    \n  }\n\n  handleQuestionVotes(question){\n    this.questionService.upvote(question);\n  }\n\n  handleQuestionClick(){\n    this.router.navigate(['/homepage', this.question.id])\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { QuestionService } from 'src/app/services/questions.service';\nimport { tap } from 'rxjs/operators';\nimport { Question } from 'src/app/models/question.model';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { QuestionAddComponent } from './question-add/question-add.component';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  questions: Question[] = [];\n  topFiveQuestions: Question[] = [];\n  noData: boolean;\n  page = 1;\n  ownOnly = false;\n  isLoggedIn: boolean;\n  subscriptions: Subscription[] = [];\n  constructor(\n    private questionService: QuestionService,\n    private router: Router,\n    public dialog: MatDialog,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.getQuestions();\n    this.subscriptions.push(\n      this.questionService\n        .getTopQuestions({ sort: 'votes', order: 'desc', limit: 5 })\n        .pipe(\n          tap((questions) => {\n            console.log(\" qqq \", questions);\n            \n            this.topFiveQuestions = questions;\n          })\n        )\n        .subscribe(),\n\n      this.questionService.questions.showNoData$\n        .pipe(\n          tap((noData) => {\n            this.noData = noData;\n          })\n        )\n        .subscribe(),\n\n      this.questionService.questions.data$\n        .pipe(\n          tap((questions) => {\n            this.questions.push(...questions);\n          })\n        )\n        .subscribe(),\n\n      this.authService.isLoggedIn$\n        .pipe(\n          tap((isLogged) => {\n            this.isLoggedIn = isLogged;\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  onScroll() {\n    this.getQuestions();\n  }\n\n  getQuestions() {\n    this.questionService.getQuestions({\n      page: this.page++,\n      order: 'desc',\n      sort: 'id',\n      limit: 10,\n      userId: this.ownOnly ? this.authService.activeUser.id : 0,\n    });\n  }\n\n  handleQuestionClick(question: Question) {\n    this.router.navigate(['/homepage', question.id]);\n  }\n\n  toggleOwnQuestions() {\n    this.ownOnly = !this.ownOnly;\n    this.questions = [];\n    this.page = 0;\n    this.getQuestions();\n  }\n\n  addQuestion(): void {\n    const dialogRef = this.dialog.open(QuestionAddComponent, {\n      panelClass: 'add-question',\n    });\n\n    dialogRef.afterClosed().subscribe((newQuestion: Question) => {\n      if (newQuestion) {\n        newQuestion.createdAt = new Date();\n        newQuestion.numberOfNewComments = 0;\n        newQuestion.votes = 0;\n        newQuestion.userId = this.authService.activeUser.id;\n        this.subscriptions.push(\n          this.questionService\n            .addQuestion(newQuestion)\n            .pipe(\n              tap((question) => {\n                this.page = 0;\n                this.questions = [];\n                this.getQuestions();\n              })\n            )\n            .subscribe()\n        );\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((s) => {\n      s.unsubscribe();\n    });\n  }\n}\n","  <div\r\n    class=\"container\"\r\n    infiniteScroll\r\n    [infiniteScrollDistance]=\"2\"\r\n    [infiniteScrollThrottle]=\"50\"\r\n    (scrolled)=\"onScroll()\"\r\n  >\r\n    <div class=\"questions-wrapper\">\r\n      <div\r\n        class=\"controls\"\r\n      >\r\n        <h2 style=\"margin: 0px\">Questions</h2>\r\n        <mat-slide-toggle (click)=\"toggleOwnQuestions()\" *ngIf=\"isLoggedIn\"\r\n          >Show only my questions</mat-slide-toggle\r\n        >\r\n        <button\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          (click)=\"addQuestion()\"\r\n          [disabled]=\"!isLoggedIn\"\r\n        >\r\n          Add question\r\n        </button>\r\n      </div>\r\n      <ng-container *ngFor=\"let question of questions\">\r\n        <app-question [question]=\"question\" [summary]=\"true\"></app-question>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <div class=\"questions-wrapper\">\r\n      <h2>Hot questions 🔥</h2>\r\n      <ng-container *ngFor=\"let hotQuestion of topFiveQuestions\">\r\n        <app-question\r\n          [question]=\"hotQuestion\"\r\n          [showVoteBar]=\"false\"\r\n        ></app-question>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <ng-container *ngIf=\"noData\">\r\n    <div class=\"no-data\">\r\n      <mat-icon style=\"font-size: 36px\">checklist_rtl</mat-icon>\r\n      <h3>You have seen it all!</h3>\r\n    </div>\r\n  </ng-container>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Comment } from 'src/app/models/comment.model';\nimport { Question } from 'src/app/models/question.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { QuestionService } from 'src/app/services/questions.service';\n\n@Component({\n  selector: 'app-question-details',\n  templateUrl: './question-details.component.html',\n  styleUrls: ['./question-details.component.scss'],\n})\nexport class QuestionDetailsComponent implements OnInit, OnDestroy {\n  question: Question;\n  comments: Comment[] = [];\n\n  commentForm = new FormGroup({\n    comment: new FormControl(),\n  });\n  isLoggedIn: boolean;\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    private questionService: QuestionService,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.authService.token;\n    this.subscriptions.push(\n      this.route.params.subscribe((params) => {\n        if (params && params.id) {\n          this.questionService.getQuestionDetails(params.id);\n        }\n      }),\n      this.questionService.selectedQuestion.data$\n        .pipe(\n          tap((question) => {\n            this.question = question;\n            this.getComments();\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  handleLogin(){\n    this.router.navigate(['/login'])\n  }\n\n  onSubmit() {\n    const comment = {\n      comment: this.commentForm.get('comment').value,\n      userId: this.authService.activeUser.id,\n      commentedAt: new Date(),\n      questionId: this.question.id,\n    } as Comment;\n\n    this.subscriptions.push(\n      this.questionService\n        .addComment(comment)\n        .pipe(\n          tap((_) => {\n            this.commentForm.reset();\n            this.getComments();\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  getComments() {\n    this.subscriptions.push(\n      this.questionService\n        .getComments(this.question.id)\n        .pipe(\n          map((comments: Comment[]) => {\n            comments.forEach((comment) => {\n              this.authService.getUser(comment.userId).subscribe((u) => {\n                comment.username = u.username;\n              });\n            });\n            this.comments = comments;\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((s) => {\n      s.unsubscribe();\n    });\n  }\n}\n","<div class=\"container\">\n  <app-question [question]=\"question\" [summary]=\"false\"></app-question>\n\n  <div class=\"comments-section\">\n    <ng-container *ngIf=\"isLoggedIn\">\n      <h2>Leave a comment</h2>\n      <form [formGroup]=\"commentForm\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Leave a comment</mat-label>\n          <textarea\n            formControlName=\"comment\"\n            matInput\n            placeholder=\"Do not be rude...\"\n          ></textarea>\n        </mat-form-field>\n        <button\n          type=\"button\"\n          (click)=\"onSubmit()\"\n          mat-raised-button\n          color=\"primary\"\n        >\n          Comment\n        </button>\n      </form>\n    </ng-container>\n\n    <h2>Comments ({{ comments.length }})</h2>\n    <div class=\"login-comment-message\" *ngIf=\"!isLoggedIn\">\n      <p>\n        \n        <span (click)=\"handleLogin()\">Log in </span>\n        to leave a comment.\n      </p>\n    </div>\n    <div class=\"comments\" *ngFor=\"let comment of comments\">\n      <div class=\"comment\">\n        <p>{{ comment.username }}</p>\n        <p>{{ comment.comment }}</p>\n        <p>{{ comment.commentedAt | date: \"HH MMM, hh:mm\" }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>comments works!</p>\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { GuiService } from './ui/gui.service';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from './services/auth.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { User } from './models/user.model';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'frodav2';\n  activeUser: User;\n  isLoggedIn: boolean;\n  subscriptions: Subscription[] = [];\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private guiService: GuiService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.authService.isLoggedIn$\n        .pipe(\n          tap((isLoggedIn) => {\n            this.isLoggedIn = isLoggedIn;\n          })\n        )\n        .subscribe()\n    );\n\n    if (localStorage.getItem('loggedUser')) {\n      this.authService.activeUser = JSON.parse(\n        localStorage.getItem('loggedUser')\n      );\n    }\n\n    if (localStorage.getItem('token')) {\n      this.authService._isLoggedIn.next(true);\n    }\n\n    this.subscriptions.push(\n      this.guiService.isDarkMode$\n        .pipe(\n          tap((isDarkMode) => {\n            this.renderer.removeClass(this.document.body, 'dark-mode');\n            this.renderer.removeClass(this.document.body, 'light-mode');\n            if (isDarkMode) {\n              this.renderer.addClass(this.document.body, 'dark-mode');\n            } else {\n              this.renderer.addClass(this.document.body, 'light-mode');\n            }\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/homepage']);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((s) => {\n      s.unsubscribe();\n    });\n  }\n}\n","<app-header></app-header>\n<mat-drawer-container class=\"example-container\">\n  <mat-drawer mode=\"side\" opened>\n    <div class=\"icons-wrapper\">\n      <mat-icon [routerLink]=\"['/homepage']\" routerLinkActive=\"active\">dynamic_form</mat-icon>\n      <ng-container *ngIf=\"!isLoggedIn; else showLogOut\">\n        <mat-icon [routerLink]=\"['/login']\" routerLinkActive=\"active\">account_circle</mat-icon>\n      </ng-container>\n\n      <ng-template #showLogOut>\n        <mat-icon (click)=\"logout()\" routerLinkActive=\"active\">logout</mat-icon>\n      </ng-template>\n      \n    </div>\n  </mat-drawer>\n  <mat-drawer-content>\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\nimport { User } from 'src/app/models/user.model';\nimport { EmailValidator } from 'src/app/ui/form.validators';\nimport { Subscription } from 'rxjs';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  loginForm = new FormGroup({\n    email: new FormControl(null, [Validators.required, EmailValidator]),\n    password: new FormControl(null, [Validators.required]),\n  });\n\n  registrationForm = new FormGroup({\n    email: new FormControl(null, [Validators.required, EmailValidator]),\n    password: new FormControl(null, [\n      Validators.minLength(8),\n      Validators.required,\n    ]),\n    username: new FormControl(null, Validators.required),\n  });\n  activeUser: User;\n  registrationPage: boolean;\n  subscriptions: Subscription[] = [];\n\n  get loginEmail() {\n    return this.loginForm.get('email');\n  }\n\n  get loginPassword() {\n    return this.loginForm.get('password');\n  }\n\n  get registrationEmail() {\n    return this.registrationForm.get('email');\n  }\n\n  get registrationPassword() {\n    return this.registrationForm.get('password');\n  }\n  get registrationUsername() {\n    return this.registrationForm.get('username');\n  }\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef<LoginComponent>\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.authService.isLoggedIn$\n        .pipe(\n          tap((isLoggedIn) => {\n            if (isLoggedIn) {\n              this.router.navigate(['/homepage']);\n              try {\n                this.dialogRef?.close();\n              } catch (error) {}\n            }\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  login() {\n    this.authService.login(this.loginForm.value);\n  }\n\n  handleRegistration() {\n    this.registrationPage = true;\n  }\n\n  register() {\n    this.authService.register(this.registrationForm.value);\n    if (this.registrationForm.valid) {\n      this.registrationPage = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((s) => {\n      s.unsubscribe();\n    });\n  }\n}\n","<div class=\"login-card\" *ngIf=\"!registrationPage\">\n  <h1>Log in</h1>\n  <form [formGroup]=\"loginForm\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Email</mat-label>\n      <input formControlName=\"email\" matInput placeholder=\"Placeholder\" />\n      <mat-error *ngIf=\"loginEmail.invalid && (loginEmail.dirty || loginEmail.touched)\">\n        <mat-error *ngIf=\"loginEmail.errors && loginEmail.errors?.required\">\n          Email is required\n        </mat-error>\n        <mat-error *ngIf=\"loginEmail.errors && loginEmail.errors['invalidEmail']\">\n          Email format is invalid.\n        </mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input\n        formControlName=\"password\"\n        type=\"password\"\n        matInput\n        placeholder=\"Placeholder\"\n      />\n      <mat-icon matSuffix>password</mat-icon>\n      <mat-error *ngIf=\"loginPassword.errors && loginPassword.errors?.required\">\n        Password is required\n      </mat-error>\n    </mat-form-field>\n  </form>\n  <p>\n    Don't have an account?\n    <span\n      (click)=\"handleRegistration()\"\n      style=\"cursor: pointer; color: var(--primary)\"\n      >Create one.</span\n    >\n  </p>\n  <button\n    (click)=\"login()\"\n    mat-raised-button\n    color=\"primary\"\n    [disabled]=\"loginForm.invalid\"\n  >\n    Login\n  </button>\n</div>\n\n<div class=\"login-card\" *ngIf=\"registrationPage\">\n  <h1>Registration</h1>\n  <form [formGroup]=\"registrationForm\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Email</mat-label>\n      <input formControlName=\"email\" matInput placeholder=\"Placeholder\" />\n      <mat-error *ngIf=\"registrationEmail.invalid && (registrationEmail.dirty || registrationEmail.touched)\">\n        <mat-error *ngIf=\"registrationEmail.errors && registrationEmail.errors?.required\">\n          Email is required\n        </mat-error>\n        <mat-error *ngIf=\"registrationEmail.errors && registrationEmail.errors['invalidEmail']\">\n          Email format is invalid.\n        </mat-error>\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Username</mat-label>\n      <input formControlName=\"username\" matInput placeholder=\"Placeholder\" />\n      <mat-error *ngIf=\"registrationUsername.errors && registrationUsername.errors?.required\">\n        Username is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input\n        formControlName=\"password\"\n        type=\"password\"\n        matInput\n        placeholder=\"Placeholder\"\n      />\n      <mat-icon matSuffix>password</mat-icon>\n      <mat-error *ngIf=\"registrationPassword.errors && registrationPassword.errors['minlength']\">\n        Password must be at least 8 characters long.\n      </mat-error>\n      <mat-error *ngIf=\"registrationPassword.errors && registrationPassword.errors?.required\">\n        Password is required\n      </mat-error>\n    </mat-form-field>\n  </form>\n  <button (click)=\"register()\" [disabled]=\"registrationForm.invalid\" mat-raised-button color=\"primary\">\n    Register\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginModule } from './components/login/login.module';\nimport { HeaderComponent } from './ui/header/header.component';\nimport { MaterialModule } from './ui/material.module';\nimport { AuthInterceptor } from './services/auth.interceptor';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { TruncatePipe } from './ui/truncate.pipe';\nimport { QuestionComponent } from './ui/question/question.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { VoteComponent } from './ui/vote/vote.component';\nimport { QuestionDetailsComponent } from './components/home/question-details/question-details.component';\nimport { CommentsComponent } from './components/home/question-details/comments/comments.component';\nimport { QuestionAddComponent } from './components/home/question-add/question-add.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TruncatePipe,\n    HeaderComponent,\n    QuestionComponent,\n    VoteComponent,\n    QuestionDetailsComponent,\n    CommentsComponent,\n    QuestionAddComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    MaterialModule,\n    LoginModule,\n    BrowserAnimationsModule,\n    InfiniteScrollModule\n  ],\n  providers: [{\n    provide:HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GuiService{\r\n    private readonly _isDarkMode = new BehaviorSubject<boolean>(false)\r\n    readonly isDarkMode$ = this._isDarkMode.asObservable()\r\n\r\n    get isDarkMode(){\r\n        return this._isDarkMode.getValue()\r\n    }\r\n\r\n    set isDarkMode(value: boolean){\r\n        this._isDarkMode.next(value)\r\n    }\r\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Question } from 'src/app/models/question.model';\n\n@Component({\n  selector: 'app-question-add',\n  templateUrl: './question-add.component.html',\n  styleUrls: ['./question-add.component.scss']\n})\nexport class QuestionAddComponent implements OnInit {\n  questionAddForm = new FormGroup({\n    title: new FormControl(null, [Validators.required]),\n    body: new FormControl(null, [Validators.required]),\n  });\n\n  get title(){\n    return this.questionAddForm.get('title')\n  }\n\n  get body(){\n    return this.questionAddForm.get('body')\n  }\n  constructor(public dialogRef: MatDialogRef<QuestionAddComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Question) { }\n\n  ngOnInit(): void {\n\n  }\n\n  dismiss(){\n    this.dialogRef.close()\n  }\n}\n","<div class=\"login-card\">\n  <h1>Ask something</h1>\n  <form [formGroup]=\"questionAddForm\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Title</mat-label>\n      <input formControlName=\"title\" matInput placeholder=\"Title\" />\n      <mat-error *ngIf=\"title.invalid && (title.dirty || title.touched)\">\n        <mat-error *ngIf=\"title.errors && title.errors?.required\">\n          Title is required\n        </mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Question</mat-label>\n      <textarea\n        formControlName=\"body\"\n        matInput\n        rows=\"15\"\n        placeholder=\"Type question here..\"\n      ></textarea>\n      <mat-error *ngIf=\"body.errors && body.errors?.required\">\n        Question is required\n      </mat-error>\n    </mat-form-field>\n  </form>\n  <div style=\"display: flex; gap: 16px\">\n  <button\n    mat-raised-button\n    color=\"primary\"\n    [disabled]=\"questionAddForm.invalid\"\n    [mat-dialog-close]=\"questionAddForm.value\"\n    cdkFocusInitial\n  >\n    Add\n  </button>\n\n  <button\n    mat-stroked-button\n    color=\"primary\"\n    (click)=\"dismiss()\"\n    cdkFocusInitial\n  >\n    Cancel\n  </button>\n</div>\n\n</div>\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Comment } from '../models/comment.model';\r\nimport { DefaultParameters } from '../models/pagination.model';\r\nimport { Question } from '../models/question.model';\r\nimport { StoreEntity } from '../models/store-entity.model';\r\nimport { ErrorService } from '../ui/error.service';\r\nimport { AuthService } from './auth.service';\r\nimport { EndpointURIs } from './service.model';\r\nconst routes = {\r\n  questions: () => `${EndpointURIs.QUESTIONS}`,\r\n  upvote: () => `${EndpointURIs.QUESTIONS}`,\r\n  question: (id: number) => `${EndpointURIs.QUESTIONS}/${id}`,\r\n  comment: () => `${EndpointURIs.COMMENT}`,\r\n  comments: (id: number) => `${EndpointURIs.COMMENT}?questionId=${id}`,\r\n};\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuestionService {\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Headers': 'Content-Type',\r\n      'Content-Type': 'application/json',\r\n    }),\r\n  };\r\n  questions = new StoreEntity<Question[]>(null, true, true);\r\n  selectedQuestion = new StoreEntity<Question>(null, true, true);\r\n  totalQuestions = 0;\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private errorService: ErrorService\r\n  ) {}\r\n\r\n  public getQuestions(params: DefaultParameters = { page: 1, limit: 20, order: 'desc', sort: 'id' }) {\r\n    let httpParams = new HttpParams();\r\n    if (params?.page) {\r\n      httpParams = httpParams.set('_page', params?.page.toString());\r\n    }\r\n    if (params?.limit) {\r\n      httpParams = httpParams.set('_limit', params?.limit.toString());\r\n    }\r\n    if (params?.order) {\r\n      httpParams = httpParams.set('_order', params?.order.toString());\r\n    }\r\n    if (params?.sort) {\r\n      httpParams = httpParams.set('_sort', params?.sort.toString());\r\n    }\r\n    if (params?.userId > 0) {\r\n      httpParams = httpParams.set('userId', params?.userId.toString());\r\n    }\r\n    this.questions.loading = true;\r\n    return this.httpClient\r\n      .get(routes.questions(), {\r\n        params: httpParams,\r\n        observe: 'response',\r\n        headers: this.httpOptions.headers,\r\n      })\r\n      .pipe(\r\n        map((response: any) => {\r\n          this.totalQuestions = response.headers.get('X-Total-Count');\r\n          this.questions.data = response.body;\r\n          this.questions.loading = false;\r\n        }),\r\n        catchError((err) => {\r\n          this.questions.loading = false;\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  public getTopQuestions(params: DefaultParameters = { page: 1, limit: 5 }) {\r\n    let httpParams = new HttpParams();\r\n    if (params?.page) {\r\n      httpParams = httpParams.set('_page', params?.page.toString());\r\n    }\r\n    if (params?.limit) {\r\n      httpParams = httpParams.set('_limit', params?.limit.toString());\r\n    }\r\n    if (params?.order) {\r\n      httpParams = httpParams.set('_order', params?.order.toString());\r\n    }\r\n    if (params?.sort) {\r\n      httpParams = httpParams.set('_sort', params?.sort.toString());\r\n    }\r\n    return this.httpClient\r\n      .get(routes.questions(), {\r\n        params: httpParams,\r\n        observe: 'response',\r\n        headers: this.httpOptions.headers,\r\n      })\r\n      .pipe(\r\n        map((res) => res.body),\r\n        catchError((err) => {\r\n          this.questions.loading = false;\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      );\r\n  }\r\n\r\n  public getQuestionDetails(id: number) {\r\n    this.selectedQuestion.loading = true;\r\n    this.httpClient\r\n      .get(routes.question(id), {\r\n        observe: 'response',\r\n        headers: this.httpOptions.headers,\r\n      })\r\n      .pipe(\r\n        tap((res: any) => {\r\n          this.selectedQuestion.loading = false;\r\n          this.selectedQuestion.data = res.body;\r\n        }),\r\n        catchError((err) => {\r\n          this.selectedQuestion.loading = false;\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  public upvote(question: Question) {\r\n    this.httpClient\r\n      .put(routes.question(question.id), question, {\r\n        headers: this.httpOptions.headers,\r\n      })\r\n      .pipe(\r\n        catchError((err) => {\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  public addComment(comment: Comment) {\r\n    return this.httpClient\r\n      .post(routes.comment(), comment, {\r\n        headers: this.httpOptions.headers,\r\n      })\r\n      .pipe(\r\n        tap((_) => {\r\n          this.updateQuestionNotification(this.selectedQuestion.data.id);\r\n        }),\r\n        catchError((err) => {\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      );\r\n  }\r\n\r\n  updateQuestionNotification(id: number, clear = false) {\r\n    this.httpClient\r\n      .patch(\r\n        routes.question(id),\r\n        {\r\n          numberOfNewComments: clear ? 0 : ++this.selectedQuestion.data.numberOfNewComments,\r\n        },\r\n        this.httpOptions\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  public addQuestion(question: Question) {\r\n    return this.httpClient\r\n      .post(routes.questions(), question, {\r\n        headers: this.httpOptions.headers,\r\n      })\r\n      .pipe(\r\n        catchError((err) => {\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      );\r\n  }\r\n\r\n  public getComments(id: number) {\r\n    return this.httpClient\r\n      .get(routes.comments(id), {\r\n        headers: this.httpOptions.headers,\r\n      })\r\n      .pipe(\r\n        catchError((err) => {\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, throwError } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ErrorService{\r\n    constructor(private snackbar: MatSnackBar){}\r\n    handleError(error: any){\r\n        this.snackbar.open(error.error || error.message, '', {duration: 5000})\r\n    }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, of, Subject } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { User } from '../models/user.model';\r\nimport { ErrorService } from '../ui/error.service';\r\nimport { EndpointURIs } from './service.model';\r\nconst routes = {\r\n  user: (id: number) => `${EndpointURIs.USER}/${id}`,\r\n  login: () => `${EndpointURIs.LOGIN}`,\r\n  register: () => `${EndpointURIs.REGISTER}`,\r\n};\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private readonly _activeUser = new BehaviorSubject<User>(null);\r\n  readonly activeUser$ = this._activeUser.asObservable();\r\n  _isLoggedIn = new BehaviorSubject<boolean>(false);\r\n  isLoggedIn$ = this._isLoggedIn.asObservable();\r\n\r\n  get token() {\r\n    return localStorage.getItem('token') || '';\r\n  }\r\n\r\n  get activeUser() {\r\n    return this._activeUser.getValue();\r\n  }\r\n\r\n  set activeUser(value: User) {\r\n    this._activeUser.next(value);\r\n  }\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Headers': 'Content-Type',\r\n      'Content-Type': 'application/json',\r\n    }),\r\n  };\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private errorService: ErrorService\r\n  ) {}\r\n\r\n  login(credentials: User) {\r\n    this.httpClient\r\n      .post(routes.login(), credentials, this.httpOptions)\r\n      .pipe(\r\n        tap((response: any) => {\r\n          this.activeUser = response.user;\r\n          localStorage.setItem('token', response.accessToken);\r\n          localStorage.setItem('loggedUser', JSON.stringify(response.user));\r\n          this._isLoggedIn.next(true);\r\n        }),\r\n        catchError((err) => {\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  register(userDetails: User) {\r\n    this.httpClient\r\n      .post(routes.register(), userDetails, this.httpOptions)\r\n      .pipe(\r\n        catchError((err) => {\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getUser(id: number){\r\n    return this.httpClient\r\n      .get(routes.user(id), {\r\n        headers: this.httpOptions.headers,\r\n      })\r\n      .pipe(\r\n        catchError((err) => {\r\n          this.errorService.handleError(err);\r\n          return of(err);\r\n        })\r\n      )\r\n  }\r\n\r\n  logout() {\r\n    this.activeUser = null\r\n    this._isLoggedIn.next(false)\r\n    localStorage.setItem('token', '')\r\n    localStorage.setItem('userId', '')\r\n  }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatDialogModule, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MaterialModule } from \"src/app/ui/material.module\";\r\nimport { LoginRoutingModule } from \"./login-routing-module\";\r\nimport { LoginComponent } from \"./login.component\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        LoginComponent\r\n    ],\r\n    imports:[\r\n        LoginRoutingModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n        HttpClientModule,\r\n        ReactiveFormsModule,\r\n        MatDialogModule,\r\n        CommonModule\r\n    ],\r\n    providers:[HttpClient, {\r\n        provide: MatDialogRef,\r\n        useValue: {}\r\n      },]\r\n})\r\nexport class LoginModule {}","import { Question } from 'src/app/models/question.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nenum VoteAction {\n  UPVOTE = 'UPWOTE',\n  DOWNVOTE = 'DOWNVOTE',\n}\n\n@Component({\n  selector: 'app-vote',\n  templateUrl: './vote.component.html',\n  styleUrls: ['./vote.component.scss'],\n})\nexport class VoteComponent implements OnInit {\n  @Input() question: Question;\n  @Output() updatedQuestion: EventEmitter<Question> = new EventEmitter();\n  eVoteAction = VoteAction;\n  constructor(private authServie: AuthService) {}\n\n  ngOnInit(): void {}\n\n  vote(action: VoteAction) {\n    const { activeUser } = this.authServie;\n    const userId = activeUser?.id || 0;\n    const userAlreadyUpvoted =\n      this.question.votesBy?.some((q) => q === userId) || false;\n\n    if (action == VoteAction.DOWNVOTE && !userAlreadyUpvoted) {\n      this.question.votesBy = this.question.votesBy?.filter(\n        (v) => v !== userId\n      );\n      this.question.votes--;\n    } else if (action == VoteAction.UPVOTE && !userAlreadyUpvoted) {\n      this.question.votes++;\n    }\n\n    if (this.question.votesBy) {\n      this.question.votesBy.push(userId);\n    } else {\n      this.question.votesBy = [userId];\n    }\n\n    this.updatedQuestion.emit(this.question);\n  }\n}\n","<div style=\"display: flex; justify-content: flex-end; gap: 16px\">\n  <mat-icon (click)=\"vote(eVoteAction.UPVOTE)\">thumb_up</mat-icon>\n  <span>{{ question.votes }}</span>\n  <mat-icon (click)=\"vote(eVoteAction.DOWNVOTE)\">thumb_down</mat-icon>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { GuiService } from '../gui.service';\nimport { tap, take } from 'rxjs/operators';\nimport { Question } from 'src/app/models/question.model';\nimport { QuestionService } from 'src/app/services/questions.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  isDarkMode: boolean;\n  unreadComments: Question[] = [];\n  isLoggedIn: boolean;\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    private router: Router,\n    private guiService: GuiService,\n    private questionService: QuestionService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.guiService.isDarkMode$\n        .pipe(\n          tap((isDarkMode) => {\n            this.isDarkMode = isDarkMode;\n          })\n        )\n        .subscribe(),\n      this.authService.isLoggedIn$\n        .pipe(\n          tap((isLogged) => {\n            this.isLoggedIn = isLogged;\n          })\n        )\n        .subscribe(),\n\n      this.questionService.questions.data$\n        .pipe(\n          tap((questions: Question[]) => {\n            if (this.authService.activeUser) {\n              this.unreadComments = questions.filter(\n                (q) =>\n                  q.userId === this.authService.activeUser.id &&\n                  q.numberOfNewComments > 0\n              );\n            }\n          })\n        )\n        .subscribe()\n    );\n  }\n\n  toggleDarkMode() {\n    this.guiService.isDarkMode = !this.guiService.isDarkMode;\n  }\n\n  handleNotifClick(question: Question) {\n    this.questionService.selectedQuestion.data = question;\n    this.router.navigate(['/homepage', question.id]);\n    this.questionService.getQuestions();\n    this.questionService.updateQuestionNotification(question.id, true);\n  }\n}\n","<mat-toolbar>\n  <span class=\"spacer\"></span>\n  <span style=\"color: var(--text-primary)\">DiveIn</span>\n  <span class=\"spacer\"></span>\n  <button mat-button [matMenuTriggerFor]=\"menu\" *ngIf=\"isLoggedIn\">\n    <mat-icon>notifications</mat-icon><span>{{unreadComments.length}}</span>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <p *ngIf=\"unreadComments.length == 0\" style=\"padding: 8px 16px;\">No new notifications</p>\n    <ng-container *ngFor=\"let item of unreadComments\">\n      <div class=\"unread-item\" (click)=\"handleNotifClick(item)\">\n        <p>\n          {{ item.title }}\n        </p>\n        <p>{{ item.body | truncate: 50 }}</p>\n      </div>\n    </ng-container>\n  </mat-menu>\n  <button (click)=\"toggleDarkMode()\" mat-icon-button>\n    <mat-icon *ngIf=\"!isDarkMode\">dark_mode</mat-icon>\n    <mat-icon *ngIf=\"isDarkMode\">light_mode</mat-icon>\n  </button>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { QuestionDetailsComponent } from './components/home/question-details/question-details.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'homepage',\n    pathMatch: 'full',\n  },\n  {\n    path: 'homepage',\n    component: HomeComponent,\n  },\n  {\n    path: 'homepage/:id',\n    component: QuestionDetailsComponent,\n  },\n  {\n    path: 'login',\n    loadChildren: () =>\n      import('./components/login/login.module').then((m) => m.LoginModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { NgModule } from '@angular/core'\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatCheckboxModule } from '@angular/material/checkbox'\r\nimport { MatNativeDateModule } from '@angular/material/core'\r\nimport { MatDatepickerModule } from '@angular/material/datepicker'\r\nimport { MatDialogModule } from '@angular/material/dialog'\r\nimport { MatFormFieldModule } from '@angular/material/form-field'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatListModule } from '@angular/material/list'\r\nimport { MatMenuModule } from '@angular/material/menu'\r\nimport { MatPaginatorModule } from '@angular/material/paginator'\r\nimport { MatRadioModule } from '@angular/material/radio'\r\nimport { MatSelectModule } from '@angular/material/select'\r\nimport { MatSidenavModule } from '@angular/material/sidenav'\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\r\nimport { MatSortModule } from '@angular/material/sort'\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatTabsModule } from '@angular/material/tabs'\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatSelectModule,\r\n        MatToolbarModule,\r\n        MatSnackBarModule,\r\n        MatAutocompleteModule,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatTableModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSidenavModule,\r\n        MatListModule,\r\n        MatSlideToggleModule,\r\n        MatTabsModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n    providers: [],\r\n    declarations: [\r\n  ],\r\n    exports: [\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatSelectModule,\r\n        MatToolbarModule,\r\n        MatSnackBarModule,\r\n        MatAutocompleteModule,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatTableModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSidenavModule,\r\n        MatProgressSpinnerModule,\r\n        MatListModule,\r\n        MatSlideToggleModule,\r\n        MatTabsModule,\r\n    ],\r\n})\r\nexport class MaterialModule {}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}